{"ast":null,"code":"import { ADD_MESSAGE, LOAD_MESSAGE_PENDING, LOAD_MESSAGE_ERROR, LOAD_MESSAGE_SUCCESS } from \"../actions\";\nconst INIT_STATE = [{\n  username: \"toto\",\n  message: \"hello word\",\n  sentAt: new Date()\n}];\nexport const messageList = (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case ADD_MESSAGE:\n      let newState = {\n        username: action.username,\n        message: action.message,\n        sentAt: action.sentAt\n      };\n      return state.concat(newState);\n\n    case LOAD_MESSAGE_PENDING:\n      return state;\n\n    case LOAD_MESSAGE_SUCCESS:\n      const newData = (msg, index) => state.push(msg);\n\n      action.messages.forEach(newData);\n      return state;\n\n    case LOAD_MESSAGE_ERROR:\n      return [...state, {\n        message: action.error,\n        username: \"system\",\n        sentAt: new Date()\n      }];\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/loryleticee/Sites/react/src/reducers/Chat.js"],"names":["ADD_MESSAGE","LOAD_MESSAGE_PENDING","LOAD_MESSAGE_ERROR","LOAD_MESSAGE_SUCCESS","INIT_STATE","username","message","sentAt","Date","messageList","state","action","type","newState","concat","newData","msg","index","push","messages","forEach","error"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,oBAArB,EAA2CC,kBAA3C,EAA+DC,oBAA/D,QAA0F,YAA1F;AAEA,MAAMC,UAAU,GAAG,CACf;AACIC,EAAAA,QAAQ,EAAE,MADd;AAEIC,EAAAA,OAAO,EAAE,YAFb;AAGIC,EAAAA,MAAM,EAAI,IAAIC,IAAJ;AAHd,CADe,CAAnB;AAQA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGN,UAAT,EAAqBO,MAArB,KAAgC;AACvD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKZ,WAAL;AACI,UAAIa,QAAQ,GAAG;AACXR,QAAAA,QAAQ,EAAEM,MAAM,CAACN,QADN;AAEXC,QAAAA,OAAO,EAAGK,MAAM,CAACL,OAFN;AAGXC,QAAAA,MAAM,EAAII,MAAM,CAACJ;AAHN,OAAf;AAMA,aAAOG,KAAK,CAACI,MAAN,CAAaD,QAAb,CAAP;;AAEJ,SAAKZ,oBAAL;AACI,aAAOS,KAAP;;AAEJ,SAAKP,oBAAL;AACI,YAAMY,OAAO,GAAG,CAACC,GAAD,EAAMC,KAAN,KACZP,KAAK,CAACQ,IAAN,CAAWF,GAAX,CADJ;;AAGAL,MAAAA,MAAM,CAACQ,QAAP,CAAgBC,OAAhB,CAAwBL,OAAxB;AAEA,aAAQL,KAAR;;AAEJ,SAAKR,kBAAL;AACI,aAAO,CAAC,GAAGQ,KAAJ,EAAW;AACdJ,QAAAA,OAAO,EAAGK,MAAM,CAACU,KADH;AAEdhB,QAAAA,QAAQ,EAAE,QAFI;AAGdE,QAAAA,MAAM,EAAI,IAAIC,IAAJ;AAHI,OAAX,CAAP;;AAMJ;AACI,aAAOE,KAAP;AA7BR;AA+BH,CAhCM","sourcesContent":["import {ADD_MESSAGE, LOAD_MESSAGE_PENDING, LOAD_MESSAGE_ERROR, LOAD_MESSAGE_SUCCESS} from \"../actions\"\n\nconst INIT_STATE = [\n    {\n        username: \"toto\",\n        message: \"hello word\",\n        sentAt  : new Date()\n    }\n];\n\nexport const messageList = (state = INIT_STATE, action) => {\n    switch (action.type) {\n        case ADD_MESSAGE :\n            let newState = {\n                username: action.username,\n                message : action.message,\n                sentAt  : action.sentAt,\n            };\n\n            return state.concat(newState);\n\n        case LOAD_MESSAGE_PENDING:\n            return state;\n\n        case LOAD_MESSAGE_SUCCESS:\n            const newData = (msg, index) =>(\n                state.push(msg)\n            );\n            action.messages.forEach(newData);\n\n            return  state;\n\n        case LOAD_MESSAGE_ERROR:\n            return [...state, {\n                message : action.error,\n                username: \"system\",\n                sentAt  : new Date(),\n            }];\n\n        default :\n            return state;\n    }\n};"]},"metadata":{},"sourceType":"module"}