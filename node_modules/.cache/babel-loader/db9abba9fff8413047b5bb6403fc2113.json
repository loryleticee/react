{"ast":null,"code":"import axios from 'axios';\nimport { ws } from \"../services/websocket\";\nimport { useSelector } from \"react-redux\";\nconst URL = \"https://my-json-server.typicode.com/tlenclos/formation-react-fake-server/messages\";\nexport const ADD_MESSAGE = \"ADD_MESSAGE\";\nexport const LOAD_MESSAGE_PENDING = \"LOAD_MESSAGE_PENDING\";\nexport const LOAD_MESSAGE_SUCCESS = \"LOAD_MESSAGE_SUCCESS\";\nexport const LOAD_MESSAGE_ERROR = \"LOAD_MESSAGE_ERROR\";\nexport const LOG_USER = \"LOG_USER\";\nexport const logUser = username => ({\n  type: LOG_USER,\n  username\n});\nexport const addMessage = message => {\n  const action = {\n    type: ADD_MESSAGE,\n    username: message.username,\n    message: message.message,\n    sentAt: new Date()\n  }; //ws.send(JSON.stringify(action));\n\n  return action;\n};\nexport const getMessages = () => {\n  return dispatch => {\n    dispatch({\n      type: LOAD_MESSAGE_PENDING\n    });\n    return axios.get(URL).then(json => {\n      console.log('succes');\n      dispatch({\n        type: LOAD_MESSAGE_SUCCESS,\n        messages: json.data\n      });\n    }).catch(err => {\n      console.log('error');\n      dispatch({\n        type: LOAD_MESSAGE_ERROR,\n        error: err\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/loryleticee/Sites/react/src/actions/index.js"],"names":["axios","ws","useSelector","URL","ADD_MESSAGE","LOAD_MESSAGE_PENDING","LOAD_MESSAGE_SUCCESS","LOAD_MESSAGE_ERROR","LOG_USER","logUser","username","type","addMessage","message","action","sentAt","Date","getMessages","dispatch","get","then","json","console","log","messages","data","catch","err","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,EAAR,QAAiB,uBAAjB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AAEA,MAAMC,GAAG,GAAG,mFAAZ;AAEA,OAAO,MAAMC,WAAW,GAAc,aAA/B;AACP,OAAO,MAAMC,oBAAoB,GAAK,sBAA/B;AACP,OAAO,MAAMC,oBAAoB,GAAK,sBAA/B;AACP,OAAO,MAAMC,kBAAkB,GAAO,oBAA/B;AAEP,OAAO,MAAMC,QAAQ,GAAiB,UAA/B;AAEP,OAAO,MAAMC,OAAO,GAAIC,QAAD,KAAe;AAClCC,EAAAA,IAAI,EAAMH,QADwB;AAElCE,EAAAA;AAFkC,CAAf,CAAhB;AAKP,OAAO,MAAME,UAAU,GAAIC,OAAD,IAAa;AACnC,QAAMC,MAAM,GAAG;AACXH,IAAAA,IAAI,EAAUP,WADH;AAEXM,IAAAA,QAAQ,EAAMG,OAAO,CAACH,QAFX;AAGXG,IAAAA,OAAO,EAAOA,OAAO,CAACA,OAHX;AAIXE,IAAAA,MAAM,EAAQ,IAAIC,IAAJ;AAJH,GAAf,CADmC,CAOnC;;AAEA,SAAOF,MAAP;AACH,CAVM;AAYP,OAAO,MAAMG,WAAW,GAAG,MAAM;AAC7B,SAAQC,QAAD,IAAc;AACjBA,IAAAA,QAAQ,CAAC;AAACP,MAAAA,IAAI,EAAEN;AAAP,KAAD,CAAR;AACA,WAAOL,KAAK,CAACmB,GAAN,CAAUhB,GAAV,EACFiB,IADE,CACGC,IAAI,IAAI;AAAEC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACZL,MAAAA,QAAQ,CAAC;AAACP,QAAAA,IAAI,EAAEL,oBAAP;AAA6BkB,QAAAA,QAAQ,EAAEH,IAAI,CAACI;AAA5C,OAAD,CAAR;AACH,KAHE,EAIFC,KAJE,CAIIC,GAAG,IAAI;AAACL,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACXL,MAAAA,QAAQ,CAAC;AAACP,QAAAA,IAAI,EAAEJ,kBAAP;AAA2BqB,QAAAA,KAAK,EAAED;AAAlC,OAAD,CAAR;AAAiD,KALlD,CAAP;AAMH,GARD;AASH,CAVM","sourcesContent":["import axios from 'axios';\nimport {ws} from \"../services/websocket\";\nimport {useSelector} from \"react-redux\";\n\nconst URL = \"https://my-json-server.typicode.com/tlenclos/formation-react-fake-server/messages\";\n\nexport const ADD_MESSAGE            = \"ADD_MESSAGE\";\nexport const LOAD_MESSAGE_PENDING   = \"LOAD_MESSAGE_PENDING\";\nexport const LOAD_MESSAGE_SUCCESS   = \"LOAD_MESSAGE_SUCCESS\";\nexport const LOAD_MESSAGE_ERROR     = \"LOAD_MESSAGE_ERROR\";\n\nexport const LOG_USER               = \"LOG_USER\";\n\nexport const logUser = (username) => ({\n    type    : LOG_USER,\n    username,\n});\n\nexport const addMessage = (message) => {\n    const action = {\n        type        : ADD_MESSAGE,\n        username    : message.username,\n        message     : message.message,\n        sentAt      : new Date(),\n    };\n    //ws.send(JSON.stringify(action));\n\n    return action;\n};\n\nexport const getMessages = () => {\n    return (dispatch) => {\n        dispatch({type: LOAD_MESSAGE_PENDING});\n        return axios.get(URL)\n            .then(json => { console.log('succes')\n                dispatch({type: LOAD_MESSAGE_SUCCESS, messages: json.data})\n            })\n            .catch(err => {console.log('error')\n                dispatch({type: LOAD_MESSAGE_ERROR, error: err})})\n    }\n};"]},"metadata":{},"sourceType":"module"}