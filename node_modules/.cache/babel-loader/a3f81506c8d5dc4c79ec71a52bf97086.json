{"ast":null,"code":"var _jsxFileName = \"/Users/loryleticee/Sites/react/shop.labmediaground/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Chat from './components/Chat';\nimport Log from './components/Log';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { adminReducer } from './reducers';\nimport { Provider } from 'react-redux';\nimport ReduxThunk from 'redux-thunk';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport { IntlProvider, addLocaleData } from \"react-intl\";\nimport enLocaleData from \"react-intl/locale-data/en\";\nimport frLocaleData from \"react-intl/locale-data/fr\";\naddLocaleData(enLocaleData);\naddLocaleData(frLocaleData); // i18n\n\nconst LOCALE = \"en\";\nconst traductions = {\n  en: {\n    \"chat.title\": \"ðŸ‡¬ðŸ‡§ Jolichat\",\n    \"menu.chat\": \"Chat\",\n    \"menu.settings\": \"Settings\",\n    \"message.placeholder\": \"Your message...\",\n    \"action.send\": \"Send\"\n  },\n  fr: {\n    \"chat.title\": \"ðŸ‡«ðŸ‡· JoliTchat\",\n    \"menu.chat\": \"Chat\",\n    \"menu.settings\": \"ParamÃªtres\",\n    \"message.placeholder\": \"Votre message...\",\n    \"action.send\": \"Envoyer\"\n  }\n};\nimport Background from './images/background.JPG';\nconst backgroundStyle = {\n  width: \"100%\",\n  height: \"400px\",\n  //backgroundImage: `url(${Background})`,\n  backgroundColor: \"#543b6f\"\n};\n\nconst middleWare = store => next => action => {\n  return next(action);\n};\n\nconst store = createStore(adminReducer, compose(applyMiddleware(ReduxThunk, middleWare), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()));\nstore.subscribe(() => console.log(store.getState()));\nReactDOM.render(React.createElement(IntlProvider, {\n  locale: LOCALE,\n  messages: getTradMessages(LOCALE),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71\n  },\n  __self: this\n}, React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72\n  },\n  __self: this\n}, React.createElement(Router, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  style: backgroundStyle,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74\n  },\n  __self: this\n}, React.createElement(\"nav\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75\n  },\n  __self: this\n}, React.createElement(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 76\n  },\n  __self: this\n}, React.createElement(\"li\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 77\n  },\n  __self: this\n}, React.createElement(Link, {\n  to: \"/chat\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 78\n  },\n  __self: this\n}, \"Chat\")), React.createElement(\"li\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 80\n  },\n  __self: this\n}, React.createElement(Link, {\n  to: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 81\n  },\n  __self: this\n}, \"Login\")))), React.createElement(Switch, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 86\n  },\n  __self: this\n}, React.createElement(Route, {\n  exact: true,\n  path: \"/\",\n  component: Log,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 87\n  },\n  __self: this\n}), React.createElement(Route, {\n  exact: true,\n  path: \"/chat\",\n  component: Chat,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 88\n  },\n  __self: this\n})))))), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/loryleticee/Sites/react/shop.labmediaground/src/index.js"],"names":["React","ReactDOM","Chat","Log","serviceWorker","applyMiddleware","compose","createStore","adminReducer","Provider","ReduxThunk","BrowserRouter","Router","Switch","Route","Link","IntlProvider","addLocaleData","enLocaleData","frLocaleData","LOCALE","traductions","en","fr","Background","backgroundStyle","width","height","backgroundColor","middleWare","store","next","action","window","__REDUX_DEVTOOLS_EXTENSION__","subscribe","console","log","getState","render","getTradMessages","document","getElementById","unregister"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Chat from './components/Chat';\nimport Log from './components/Log';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {applyMiddleware, compose, createStore} from 'redux';\nimport {adminReducer} from './reducers';\nimport {Provider} from 'react-redux';\nimport ReduxThunk from 'redux-thunk';\nimport {BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from 'react-router-dom';\n\nimport { IntlProvider, addLocaleData } from \"react-intl\";\nimport enLocaleData from \"react-intl/locale-data/en\";\nimport frLocaleData from \"react-intl/locale-data/fr\";\n\n\naddLocaleData(enLocaleData);\naddLocaleData(frLocaleData);\n\n// i18n\nconst LOCALE = \"en\";\n\nconst traductions = {\n    en: {\n        \"chat.title\": \"ðŸ‡¬ðŸ‡§ Jolichat\",\n        \"menu.chat\": \"Chat\",\n        \"menu.settings\": \"Settings\",\n        \"message.placeholder\": \"Your message...\",\n        \"action.send\": \"Send\"\n    },\n    fr: {\n        \"chat.title\": \"ðŸ‡«ðŸ‡· JoliTchat\",\n        \"menu.chat\": \"Chat\",\n        \"menu.settings\": \"ParamÃªtres\",\n        \"message.placeholder\": \"Votre message...\",\n        \"action.send\": \"Envoyer\"\n    }\n};\n\n\nimport Background from './images/background.JPG';\n\nconst backgroundStyle = {\n    width: \"100%\",\n    height: \"400px\",\n    //backgroundImage: `url(${Background})`,\n    backgroundColor: \"#543b6f\"\n};\n\nconst middleWare = store => next => action => {\n\n    return next(action)\n};\n\nconst store = createStore(adminReducer,\n    compose(\n        applyMiddleware(ReduxThunk, middleWare),\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n);\n\nstore.subscribe(() => console.log(store.getState()));\n\nReactDOM.render(\n    <IntlProvider locale={LOCALE} messages={getTradMessages(LOCALE)}>\n        <Provider store = {store}>\n            <Router>\n                <div style = {backgroundStyle}>\n                    <nav>\n                        <ul>\n                            <li>\n                                <Link to=\"/chat\">Chat</Link>\n                            </li>\n                            <li>\n                                <Link to=\"/\">Login</Link>\n                            </li>\n                        </ul>\n                    </nav>\n\n                    <Switch>\n                        <Route exact path=\"/\" component={Log}/>\n                        <Route exact path=\"/chat\" component={Chat} />\n                    </Switch>\n                </div>\n            </Router>\n        </Provider>\n    </IntlProvider>\n    , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}