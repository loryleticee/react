{"ast":null,"code":"import { ADD_MESSAGE, LOAD_MESSAGE_PENDING, LOAD_MESSAGE_ERROR, LOAD_MESSAGE_SUCCESS } from \"../actions\";\nconst INIT_STATE = {\n  messages: [{\n    message: 'hello word',\n    username: 'toto',\n    sentAt: new Date()\n  }]\n};\nexport const messageList = (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case ADD_MESSAGE:\n      let newState = {\n        message: action.message,\n        username: action.username,\n        sentAt: action.sentAt\n      };\n      return [...state.messages, newState];\n\n    case LOAD_MESSAGE_PENDING:\n      return state;\n\n    case LOAD_MESSAGE_SUCCESS:\n      action.messages.forEach = (index, msg) => {\n        state.concat(msg);\n      };\n\n      return state;\n\n    case LOAD_MESSAGE_ERROR:\n      return [...state.messages, {\n        message: action.error,\n        username: \"system\",\n        sentAt: new Date()\n      }];\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/loryleticee/Sites/react/src/reducers/Chat.js"],"names":["ADD_MESSAGE","LOAD_MESSAGE_PENDING","LOAD_MESSAGE_ERROR","LOAD_MESSAGE_SUCCESS","INIT_STATE","messages","message","username","sentAt","Date","messageList","state","action","type","newState","forEach","index","msg","concat","error"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,oBAArB,EAA2CC,kBAA3C,EAA+DC,oBAA/D,QAA0F,YAA1F;AAEA,MAAMC,UAAU,GAAG;AACXC,EAAAA,QAAQ,EAAG,CACP;AACIC,IAAAA,OAAO,EAAE,YADb;AAEIC,IAAAA,QAAQ,EAAE,MAFd;AAGIC,IAAAA,MAAM,EAAI,IAAIC,IAAJ;AAHd,GADO;AADA,CAAnB;AAWA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGP,UAAT,EAAqBQ,MAArB,KAAgC;AACvD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKb,WAAL;AACI,UAAIc,QAAQ,GAAG;AACXR,QAAAA,OAAO,EAAGM,MAAM,CAACN,OADN;AAEXC,QAAAA,QAAQ,EAAEK,MAAM,CAACL,QAFN;AAGXC,QAAAA,MAAM,EAAII,MAAM,CAACJ;AAHN,OAAf;AAMA,aAAO,CAAC,GAAGG,KAAK,CAACN,QAAV,EAAoBS,QAApB,CAAP;;AAEJ,SAAKb,oBAAL;AACI,aAAOU,KAAP;;AAEJ,SAAKR,oBAAL;AAEIS,MAAAA,MAAM,CAACP,QAAP,CAAgBU,OAAhB,GAA0B,CAACC,KAAD,EAAQC,GAAR,KAAe;AACtCN,QAAAA,KAAK,CAACO,MAAN,CAAaD,GAAb;AACF,OAFD;;AAIA,aAAON,KAAP;;AAEJ,SAAKT,kBAAL;AACI,aAAO,CAAC,GAAGS,KAAK,CAACN,QAAV,EAAoB;AACvBC,QAAAA,OAAO,EAAGM,MAAM,CAACO,KADM;AAEvBZ,QAAAA,QAAQ,EAAE,QAFa;AAGvBC,QAAAA,MAAM,EAAI,IAAIC,IAAJ;AAHa,OAApB,CAAP;;AAMJ;AACI,aAAOE,KAAP;AA7BR;AA+BH,CAhCM","sourcesContent":["import {ADD_MESSAGE, LOAD_MESSAGE_PENDING, LOAD_MESSAGE_ERROR, LOAD_MESSAGE_SUCCESS} from \"../actions\"\n\nconst INIT_STATE = {\n        messages : [\n            {\n                message: 'hello word',\n                username: 'toto',\n                sentAt  : new Date()\n            }\n        ]\n    }\n;\n\nexport const messageList = (state = INIT_STATE, action) => {\n    switch (action.type) {\n        case ADD_MESSAGE :\n            let newState = {\n                message : action.message,\n                username: action.username,\n                sentAt  : action.sentAt,\n            };\n\n            return [...state.messages, newState];\n\n        case LOAD_MESSAGE_PENDING:\n            return state;\n\n        case LOAD_MESSAGE_SUCCESS:\n\n            action.messages.forEach = (index, msg) =>{\n               state.concat(msg)\n            };\n\n            return state ;\n\n        case LOAD_MESSAGE_ERROR:\n            return [...state.messages, {\n                message : action.error,\n                username: \"system\",\n                sentAt  : new Date(),\n            }];\n\n        default :\n            return state;\n    }\n};"]},"metadata":{},"sourceType":"module"}