{"ast":null,"code":"import axios from 'axios';\nimport { ws } from \"../services/websocket\";\nimport { useSelector } from \"react-redux\";\nconst URL = \"https://my-json-server.typicode.com/tlenclos/formation-react-fake-server/messages\";\nexport const ADD_MESSAGE = \"ADD_MESSAGE\";\nexport const LOAD_MESSAGE_PENDING = \"LOAD_MESSAGE_PENDING\";\nexport const LOAD_MESSAGE_SUCCESS = \"LOAD_MESSAGE_SUCCESS\";\nexport const LOAD_MESSAGE_ERROR = \"LOAD_MESSAGE_ERROR\";\nexport const LOG_USER = \"LOG_USER\";\nexport const logUser = username => ({\n  type: LOG_USER,\n  username\n});\nconst messages = useSelector(state => state.messageList);\nexport const addMessage = message => {\n  const action = {\n    type: ADD_MESSAGE,\n    message: [...messages.messages, message.message],\n    username: message.username,\n    sentAt: new Date()\n  };\n  ws.send(JSON.stringify(action));\n  return action;\n};\nexport const getMessages = () => {\n  return dispatch => {\n    dispatch({\n      type: LOAD_MESSAGE_PENDING\n    });\n    return axios.get(URL).then(json => {\n      console.log(json.data);\n      dispatch({\n        type: LOAD_MESSAGE_SUCCESS,\n        messages: json.data\n      });\n    }).catch(err => {\n      console.log(err);\n      dispatch({\n        type: LOAD_MESSAGE_ERROR,\n        error: err\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/loryleticee/Sites/react/src/actions/index.js"],"names":["axios","ws","useSelector","URL","ADD_MESSAGE","LOAD_MESSAGE_PENDING","LOAD_MESSAGE_SUCCESS","LOAD_MESSAGE_ERROR","LOG_USER","logUser","username","type","messages","state","messageList","addMessage","message","action","sentAt","Date","send","JSON","stringify","getMessages","dispatch","get","then","json","console","log","data","catch","err","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,EAAR,QAAiB,uBAAjB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AAEA,MAAMC,GAAG,GAAG,mFAAZ;AAEA,OAAO,MAAMC,WAAW,GAAc,aAA/B;AACP,OAAO,MAAMC,oBAAoB,GAAK,sBAA/B;AACP,OAAO,MAAMC,oBAAoB,GAAK,sBAA/B;AACP,OAAO,MAAMC,kBAAkB,GAAO,oBAA/B;AAEP,OAAO,MAAMC,QAAQ,GAAiB,UAA/B;AAEP,OAAO,MAAMC,OAAO,GAAIC,QAAD,KAAe;AAClCC,EAAAA,IAAI,EAAMH,QADwB;AAElCE,EAAAA;AAFkC,CAAf,CAAhB;AAKP,MAAME,QAAQ,GAAGV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,WAAhB,CAA5B;AAEA,OAAO,MAAMC,UAAU,GAAIC,OAAD,IAAa;AAEnC,QAAMC,MAAM,GAAG;AACXN,IAAAA,IAAI,EAAUP,WADH;AAEXY,IAAAA,OAAO,EAAO,CAAC,GAAGJ,QAAQ,CAACA,QAAb,EAAuBI,OAAO,CAACA,OAA/B,CAFH;AAGXN,IAAAA,QAAQ,EAAMM,OAAO,CAACN,QAHX;AAIXQ,IAAAA,MAAM,EAAQ,IAAIC,IAAJ;AAJH,GAAf;AAMAlB,EAAAA,EAAE,CAACmB,IAAH,CAAQC,IAAI,CAACC,SAAL,CAAeL,MAAf,CAAR;AAEA,SAAOA,MAAP;AACH,CAXM;AAaP,OAAO,MAAMM,WAAW,GAAG,MAAM;AAC7B,SAAQC,QAAD,IAAc;AACjBA,IAAAA,QAAQ,CAAC;AAACb,MAAAA,IAAI,EAAEN;AAAP,KAAD,CAAR;AACA,WAAOL,KAAK,CAACyB,GAAN,CAAUtB,GAAV,EACFuB,IADE,CACGC,IAAI,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,IAAjB;AACAN,MAAAA,QAAQ,CAAC;AAACb,QAAAA,IAAI,EAAEL,oBAAP;AAA6BM,QAAAA,QAAQ,EAAEe,IAAI,CAACG;AAA5C,OAAD,CAAR;AACH,KAJE,EAKFC,KALE,CAKIC,GAAG,IAAI;AAACJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACXR,MAAAA,QAAQ,CAAC;AAACb,QAAAA,IAAI,EAAEJ,kBAAP;AAA2B0B,QAAAA,KAAK,EAAED;AAAlC,OAAD,CAAR;AAAiD,KANlD,CAAP;AAOH,GATD;AAUH,CAXM","sourcesContent":["import axios from 'axios';\nimport {ws} from \"../services/websocket\";\nimport {useSelector} from \"react-redux\";\n\nconst URL = \"https://my-json-server.typicode.com/tlenclos/formation-react-fake-server/messages\";\n\nexport const ADD_MESSAGE            = \"ADD_MESSAGE\";\nexport const LOAD_MESSAGE_PENDING   = \"LOAD_MESSAGE_PENDING\";\nexport const LOAD_MESSAGE_SUCCESS   = \"LOAD_MESSAGE_SUCCESS\";\nexport const LOAD_MESSAGE_ERROR     = \"LOAD_MESSAGE_ERROR\";\n\nexport const LOG_USER               = \"LOG_USER\";\n\nexport const logUser = (username) => ({\n    type    : LOG_USER,\n    username,\n});\n\nconst messages = useSelector(state => state.messageList);\n\nexport const addMessage = (message) => {\n\n    const action = {\n        type        : ADD_MESSAGE,\n        message     : [...messages.messages, message.message],\n        username    : message.username,\n        sentAt      : new Date(),\n    };\n    ws.send(JSON.stringify(action));\n\n    return action;\n};\n\nexport const getMessages = () => {\n    return (dispatch) => {\n        dispatch({type: LOAD_MESSAGE_PENDING});\n        return axios.get(URL)\n            .then(json => {\n                console.log(json.data)\n                dispatch({type: LOAD_MESSAGE_SUCCESS, messages: json.data})\n            })\n            .catch(err => {console.log(err)\n                dispatch({type: LOAD_MESSAGE_ERROR, error: err})})\n    }\n};"]},"metadata":{},"sourceType":"module"}