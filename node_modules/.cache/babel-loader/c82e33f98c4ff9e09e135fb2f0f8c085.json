{"ast":null,"code":"import { ADD_MESSAGE, LOAD_MESSAGE_PENDING, LOAD_MESSAGE_ERROR, LOAD_MESSAGE_SUCCESS, successMessages, pendingMessages, errorMessages } from \"../actions\";\nconst INIT_STATE = {};\nexport const messageList = (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case ADD_MESSAGE:\n      let newState = {\n        username: action.username,\n        message: action.message,\n        sentAt: action.sentAt\n      };\n      return [...state, newState];\n\n    case LOAD_MESSAGE_ERROR:\n      console.log(state);\n      return state;\n\n    case LOAD_MESSAGE_PENDING:\n      return [...state, action.message];\n\n    case LOAD_MESSAGE_SUCCESS:\n      state = action.message.map(msg => {\n        return msg;\n      });\n      return state;\n\n    default:\n      console.log(state);\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/loryleticee/Sites/react/src/reducers/Chat.js"],"names":["ADD_MESSAGE","LOAD_MESSAGE_PENDING","LOAD_MESSAGE_ERROR","LOAD_MESSAGE_SUCCESS","successMessages","pendingMessages","errorMessages","INIT_STATE","messageList","state","action","type","newState","username","message","sentAt","console","log","map","msg"],"mappings":"AAAA,SACIA,WADJ,EAEIC,oBAFJ,EAGIC,kBAHJ,EAIIC,oBAJJ,EAKIC,eALJ,EAMIC,eANJ,EAOIC,aAPJ,QAQO,YARP;AAUA,MAAMC,UAAU,GAAG,EAAnB;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGF,UAAT,EAAqBG,MAArB,KAAgC;AACvD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKX,WAAL;AACI,UAAIY,QAAQ,GAAG;AACXC,QAAAA,QAAQ,EAAEH,MAAM,CAACG,QADN;AAEXC,QAAAA,OAAO,EAAGJ,MAAM,CAACI,OAFN;AAGXC,QAAAA,MAAM,EAAIL,MAAM,CAACK;AAHN,OAAf;AAMA,aAAO,CAAC,GAAGN,KAAJ,EAAWG,QAAX,CAAP;;AAEJ,SAAKV,kBAAL;AACIc,MAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACA,aAAOA,KAAP;;AAEJ,SAAKR,oBAAL;AACI,aAAO,CAAC,GAAGQ,KAAJ,EAAWC,MAAM,CAACI,OAAlB,CAAP;;AAEJ,SAAKX,oBAAL;AACIM,MAAAA,KAAK,GAAGC,MAAM,CAACI,OAAP,CAAeI,GAAf,CAAqBC,GAAD,IAAQ;AACjC,eAAOA,GAAP;AACF,OAFO,CAAR;AAGA,aAAOV,KAAP;;AAEJ;AACIO,MAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACA,aAAOA,KAAP;AAzBR;AA2BH,CA5BM","sourcesContent":["import {\n    ADD_MESSAGE,\n    LOAD_MESSAGE_PENDING,\n    LOAD_MESSAGE_ERROR,\n    LOAD_MESSAGE_SUCCESS,\n    successMessages,\n    pendingMessages,\n    errorMessages,\n} from \"../actions\";\n\nconst INIT_STATE = {};\n\nexport const messageList = (state = INIT_STATE, action) => {\n    switch (action.type) {\n        case ADD_MESSAGE :\n            let newState = {\n                username: action.username,\n                message : action.message,\n                sentAt  : action.sentAt,\n            };\n\n            return [...state, newState];\n\n        case LOAD_MESSAGE_ERROR :\n            console.log(state);\n            return state;\n\n        case LOAD_MESSAGE_PENDING :\n            return [...state, action.message];\n\n        case LOAD_MESSAGE_SUCCESS :\n            state = action.message.map( (msg) =>{\n               return msg\n            });\n            return state;\n\n        default :\n            console.log(state);\n            return state;\n    }\n};"]},"metadata":{},"sourceType":"module"}