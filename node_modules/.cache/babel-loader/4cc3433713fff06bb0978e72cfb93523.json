{"ast":null,"code":"import { useDispatch } from \"react-redux\";\nimport { ADD_MESSAGE, addMessage, LOAD_MESSAGE_PENDING } from \"../actions\";\nimport axios from \"axios\";\nimport { store } from \"../index\";\nconst dispatch = useDispatch();\n\nconst INIT_STATE = () => {\n  return async () => {\n    let response = await axios.get(URL).then(message => dispatch(addMessage(response))).catch(error => dispatch());\n  };\n};\n\nexport const messageList = (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case ADD_MESSAGE:\n      let newState = {\n        username: action.username,\n        message: action.message,\n        sentAt: action.sentAt\n      };\n      return [...state, newState];\n\n    case LOAD_MESSAGE_PENDING:\n      return state;\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/loryleticee/Sites/react/src/reducers/Chat.js"],"names":["useDispatch","ADD_MESSAGE","addMessage","LOAD_MESSAGE_PENDING","axios","store","dispatch","INIT_STATE","response","get","URL","then","message","catch","error","messageList","state","action","type","newState","username","sentAt"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,aAA1B;AACA,SAAQC,WAAR,EAAqBC,UAArB,EAAiCC,oBAAjC,QAA4D,YAA5D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,UAApB;AAEA,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;;AAEA,MAAMO,UAAU,GAAG,MAAM;AACrB,SAAO,YAAY;AACf,QAAIC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAUC,GAAV,EAAeC,IAAf,CACjBC,OAAO,IAAIN,QAAQ,CAACJ,UAAU,CAACM,QAAD,CAAX,CADF,EAGhBK,KAHgB,CAGVC,KAAK,IAAIR,QAAQ,EAHP,CAArB;AAIH,GALD;AAMH,CAPD;;AASA,OAAO,MAAMS,WAAW,GAAG,CAACC,KAAK,GAAGT,UAAT,EAAqBU,MAArB,KAAgC;AAEvD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKjB,WAAL;AACI,UAAIkB,QAAQ,GAAG;AACXC,QAAAA,QAAQ,EAAEH,MAAM,CAACG,QADN;AAEXR,QAAAA,OAAO,EAAGK,MAAM,CAACL,OAFN;AAGXS,QAAAA,MAAM,EAAIJ,MAAM,CAACI;AAHN,OAAf;AAMA,aAAO,CAAC,GAAGL,KAAJ,EAAWG,QAAX,CAAP;;AAEJ,SAAKhB,oBAAL;AACI,aAAOa,KAAP;;AACJ;AACI,aAAOA,KAAP;AAbR;AAeH,CAjBM","sourcesContent":["import {useDispatch} from \"react-redux\";\nimport {ADD_MESSAGE, addMessage, LOAD_MESSAGE_PENDING} from \"../actions\";\nimport axios from \"axios\";\nimport {store} from \"../index\";\n\nconst dispatch = useDispatch();\n\nconst INIT_STATE = () => {\n    return async () => {\n        let response = await axios.get(URL).then(\n            message => dispatch(addMessage(response))\n        )\n            .catch(error => dispatch())\n    }\n}\n\nexport const messageList = (state = INIT_STATE, action) => {\n\n    switch (action.type) {\n        case ADD_MESSAGE :\n            let newState = {\n                username: action.username,\n                message : action.message,\n                sentAt  : action.sentAt,\n            };\n\n            return [...state, newState];\n\n        case LOAD_MESSAGE_PENDING :\n            return state;\n        default :\n            return state;\n    }\n};"]},"metadata":{},"sourceType":"module"}