{"ast":null,"code":"import { store } from \"../\";\nimport { ADD_MESSAGE, LOAD_MESSAGE_PENDING, LOAD_MESSAGE_ERROR, LOAD_MESSAGE_SUCCESS, pendingMessages, successMessages, errorMessages } from \"../actions\";\nimport axios from \"axios\";\nimport { forEach } from \"react-bootstrap/cjs/ElementChildren\";\nconst URL = \"https://my-json-server.typicode.com/tlenclos/formation-react-fake-server/messages\";\n\nconst INIT_STATE = () => {\n  return axios.get(URL).then(response => {\n    store.dispatch(successMessages(response.data));\n  }).catch(error => {\n    store.dispatch(errorMessages(error));\n  });\n};\n\nexport const messageList = (state = INIT_STATE(), action) => {\n  switch (action.type) {\n    case ADD_MESSAGE:\n      let newState = {\n        username: action.username,\n        message: action.message,\n        sentAt: action.sentAt\n      };\n      return [...state, newState];\n\n    case LOAD_MESSAGE_ERROR:\n      console.log(action);\n      return state;\n\n    case LOAD_MESSAGE_PENDING:\n      return state;\n\n    case LOAD_MESSAGE_SUCCESS:\n      state = action.message.map((msg, index) => {\n        return msg;\n      });\n      console.log(state);\n      return state;\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/loryleticee/Sites/react/src/reducers/Chat.js"],"names":["store","ADD_MESSAGE","LOAD_MESSAGE_PENDING","LOAD_MESSAGE_ERROR","LOAD_MESSAGE_SUCCESS","pendingMessages","successMessages","errorMessages","axios","forEach","URL","INIT_STATE","get","then","response","dispatch","data","catch","error","messageList","state","action","type","newState","username","message","sentAt","console","log","map","msg","index"],"mappings":"AAAA,SAAQA,KAAR,QAAoB,KAApB;AACA,SACIC,WADJ,EAEIC,oBAFJ,EAGIC,kBAHJ,EAIIC,oBAJJ,EAKIC,eALJ,EAMIC,eANJ,EAOIC,aAPJ,QAQO,YARP;AASA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,qCAAtB;AAEA,MAAMC,GAAG,GAAG,mFAAZ;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAErB,SAAOH,KAAK,CAACI,GAAN,CAAUF,GAAV,EACFG,IADE,CACGC,QAAQ,IAAI;AACdd,IAAAA,KAAK,CAACe,QAAN,CAAeT,eAAe,CAACQ,QAAQ,CAACE,IAAV,CAA9B;AACH,GAHE,EAIFC,KAJE,CAIIC,KAAK,IAAI;AACZlB,IAAAA,KAAK,CAACe,QAAN,CAAeR,aAAa,CAACW,KAAD,CAA5B;AACH,GANE,CAAP;AAOH,CATD;;AAWA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGT,UAAU,EAAnB,EAAuBU,MAAvB,KAAkC;AACzD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKrB,WAAL;AACI,UAAIsB,QAAQ,GAAG;AACXC,QAAAA,QAAQ,EAAEH,MAAM,CAACG,QADN;AAEXC,QAAAA,OAAO,EAAGJ,MAAM,CAACI,OAFN;AAGXC,QAAAA,MAAM,EAAIL,MAAM,CAACK;AAHN,OAAf;AAMA,aAAO,CAAC,GAAGN,KAAJ,EAAWG,QAAX,CAAP;;AAEJ,SAAKpB,kBAAL;AACIwB,MAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AACA,aAAOD,KAAP;;AAEJ,SAAKlB,oBAAL;AACI,aAAOkB,KAAP;;AAEJ,SAAKhB,oBAAL;AACIgB,MAAAA,KAAK,GAAGC,MAAM,CAACI,OAAP,CAAeI,GAAf,CAAoB,CAACC,GAAD,EAAMC,KAAN,KAAe;AACxC,eAAOD,GAAP;AACF,OAFO,CAAR;AAGAH,MAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACA,aAAOA,KAAP;;AAEJ;AACI,aAAOA,KAAP;AAzBR;AA2BH,CA5BM","sourcesContent":["import {store} from \"../\";\nimport {\n    ADD_MESSAGE,\n    LOAD_MESSAGE_PENDING,\n    LOAD_MESSAGE_ERROR,\n    LOAD_MESSAGE_SUCCESS,\n    pendingMessages,\n    successMessages,\n    errorMessages,\n} from \"../actions\";\nimport axios from \"axios\";\nimport {forEach} from \"react-bootstrap/cjs/ElementChildren\";\n\nconst URL = \"https://my-json-server.typicode.com/tlenclos/formation-react-fake-server/messages\";\n\nconst INIT_STATE = () => {\n\n    return axios.get(URL)\n        .then(response => {\n            store.dispatch(successMessages(response.data));\n        })\n        .catch(error => {\n            store.dispatch(errorMessages(error));\n        })\n};\n\nexport const messageList = (state = INIT_STATE(), action) => {\n    switch (action.type) {\n        case ADD_MESSAGE :\n            let newState = {\n                username: action.username,\n                message : action.message,\n                sentAt  : action.sentAt,\n            };\n\n            return [...state, newState];\n\n        case LOAD_MESSAGE_ERROR :\n            console.log(action)\n            return state;\n\n        case LOAD_MESSAGE_PENDING :\n            return state;\n\n        case LOAD_MESSAGE_SUCCESS :\n            state = action.message.map( (msg, index) =>{\n               return msg\n            });\n            console.log(state)\n            return state;\n\n        default :\n            return state;\n    }\n};"]},"metadata":{},"sourceType":"module"}