{"ast":null,"code":"import { ADD_MESSAGE, LOAD_MESSAGE_PENDING, LOAD_MESSAGE_ERROR, LOAD_MESSAGE_SUCCESS } from \"../actions\";\nconst INIT_STATE = {\n  username: 'toto',\n  message: 'hello word',\n  sentAt: new Date()\n};\nexport const messageList = (state = INIT_STATE, action) => {\n  console.log(action);\n\n  switch (action.type) {\n    case ADD_MESSAGE:\n      let newState = {\n        username: action.username,\n        message: action.message,\n        sentAt: action.sentAt\n      };\n      state.push(newState);\n      return state;\n\n    case LOAD_MESSAGE_PENDING:\n      return state;\n\n    case LOAD_MESSAGE_SUCCESS:\n      const f = (msg, index) => state.push(msg);\n\n      action.messages.forEach(f);\n      return state;\n\n    case LOAD_MESSAGE_ERROR:\n      return [...state.messages, {\n        message: action.error,\n        username: \"system\",\n        sentAt: new Date()\n      }];\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/loryleticee/Sites/react/src/reducers/Chat.js"],"names":["ADD_MESSAGE","LOAD_MESSAGE_PENDING","LOAD_MESSAGE_ERROR","LOAD_MESSAGE_SUCCESS","INIT_STATE","username","message","sentAt","Date","messageList","state","action","console","log","type","newState","push","f","msg","index","messages","forEach","error"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,oBAArB,EAA2CC,kBAA3C,EAA+DC,oBAA/D,QAA0F,YAA1F;AAEA,MAAMC,UAAU,GAAG;AACHC,EAAAA,QAAQ,EAAE,MADP;AAEHC,EAAAA,OAAO,EAAE,YAFN;AAGHC,EAAAA,MAAM,EAAI,IAAIC,IAAJ;AAHP,CAAnB;AAOA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGN,UAAT,EAAqBO,MAArB,KAAgC;AACxDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACC,UAAQA,MAAM,CAACG,IAAf;AACI,SAAKd,WAAL;AACI,UAAIe,QAAQ,GAAG;AACXV,QAAAA,QAAQ,EAAEM,MAAM,CAACN,QADN;AAEXC,QAAAA,OAAO,EAAGK,MAAM,CAACL,OAFN;AAGXC,QAAAA,MAAM,EAAII,MAAM,CAACJ;AAHN,OAAf;AAMAG,MAAAA,KAAK,CAACM,IAAN,CAAWD,QAAX;AACA,aAAOL,KAAP;;AAEJ,SAAKT,oBAAL;AACI,aAAOS,KAAP;;AAEJ,SAAKP,oBAAL;AACI,YAAMc,CAAC,GAAG,CAACC,GAAD,EAAMC,KAAN,KACNT,KAAK,CAACM,IAAN,CAAWE,GAAX,CADJ;;AAIAP,MAAAA,MAAM,CAACS,QAAP,CAAgBC,OAAhB,CAAwBJ,CAAxB;AAEA,aAAQP,KAAR;;AAEJ,SAAKR,kBAAL;AACI,aAAO,CAAC,GAAGQ,KAAK,CAACU,QAAV,EAAoB;AACvBd,QAAAA,OAAO,EAAGK,MAAM,CAACW,KADM;AAEvBjB,QAAAA,QAAQ,EAAE,QAFa;AAGvBE,QAAAA,MAAM,EAAI,IAAIC,IAAJ;AAHa,OAApB,CAAP;;AAMJ;AACI,aAAOE,KAAP;AA/BR;AAiCH,CAnCM","sourcesContent":["import {ADD_MESSAGE, LOAD_MESSAGE_PENDING, LOAD_MESSAGE_ERROR, LOAD_MESSAGE_SUCCESS} from \"../actions\"\n\nconst INIT_STATE = {\n                username: 'toto',\n                message: 'hello word',\n                sentAt  : new Date()\n            }\n;\n\nexport const messageList = (state = INIT_STATE, action) => {\n   console.log(action)\n    switch (action.type) {\n        case ADD_MESSAGE :\n            let newState = {\n                username: action.username,\n                message : action.message,\n                sentAt  : action.sentAt,\n            };\n\n            state.push(newState);\n            return state;\n\n        case LOAD_MESSAGE_PENDING:\n            return state;\n\n        case LOAD_MESSAGE_SUCCESS:\n            const f = (msg, index) =>(\n                state.push(msg)\n            );\n\n            action.messages.forEach(f);\n\n            return  state;\n\n        case LOAD_MESSAGE_ERROR:\n            return [...state.messages, {\n                message : action.error,\n                username: \"system\",\n                sentAt  : new Date(),\n            }];\n\n        default :\n            return state;\n    }\n};"]},"metadata":{},"sourceType":"module"}