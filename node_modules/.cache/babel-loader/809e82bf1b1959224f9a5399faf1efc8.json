{"ast":null,"code":"var _jsxFileName = \"/Users/loryleticee/Sites/react/src/components/MessageList.js\";\nimport React, { useEffect } from 'react';\nimport MessageItem from \"./MessageItem\";\nimport ShowMessage from \"../containers/ShowMessage\";\nimport { useSelector } from \"react-redux\";\nimport { getMessages } from \"../actions\";\n\nconst MessageList = () => {\n  const messages = useSelector(state => state.messageList);\n  useEffect(() => {\n    getMessages();\n  }, [messages]);\n  return React.createElement(ShowMessage, {\n    message: messages.map((message, index) => React.createElement(MessageItem, {\n      key: index,\n      message: message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  });\n};\n\nexport default MessageList;","map":{"version":3,"sources":["/Users/loryleticee/Sites/react/src/components/MessageList.js"],"names":["React","useEffect","MessageItem","ShowMessage","useSelector","getMessages","MessageList","messages","state","messageList","map","message","index"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,WAAR,QAA0B,YAA1B;;AAGA,MAAMC,WAAW,GAAG,MAAM;AAGtB,QAAMC,QAAQ,GAAGH,WAAW,CAACI,KAAK,IAAIA,KAAK,CAACC,WAAhB,CAA5B;AAEAR,EAAAA,SAAS,CAAC,MAAM;AAEZI,IAAAA,WAAW;AACd,GAHQ,EAGN,CAACE,QAAD,CAHM,CAAT;AAKA,SACI,oBAAC,WAAD;AACI,IAAA,OAAO,EAAKA,QAAQ,CAACG,GAAT,CAAc,CAACC,OAAD,EAAUC,KAAV,KAAoB,oBAAC,WAAD;AAAa,MAAA,GAAG,EAAGA,KAAnB;AAA0B,MAAA,OAAO,EAAGD,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlC,CADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAKH,CAfD;;AAiBA,eAAeL,WAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport MessageItem from \"./MessageItem\";\nimport ShowMessage from \"../containers/ShowMessage\";\nimport {useSelector} from \"react-redux\";\nimport {getMessages} from \"../actions\";\n\n\nconst MessageList = () => {\n\n\n    const messages = useSelector(state => state.messageList);\n\n    useEffect(() => {\n\n        getMessages()\n    }, [messages]);\n\n    return (\n        <ShowMessage\n            message = { messages.map( (message, index) => <MessageItem key= {index} message= {message} /> ) }\n        />\n    );\n};\n\nexport default MessageList;"]},"metadata":{},"sourceType":"module"}