{"ast":null,"code":"import _slicedToArray from \"/Users/loryleticee/Sites/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/loryleticee/Sites/react/src/components/MessageBar.js\";\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\"; //import PropTypes from 'prop-types';\n\nimport { addMessage } from '../actions';\n\nconst MessageBar = () => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        messageContent = _useState2[0],\n        setMessageContent = _useState2[1];\n\n  const username = useSelector(state => state.username);\n  const dispatch = useDispatch();\n\n  const catchSubmit = e => {\n    e.preventDefault();\n\n    if (messageContent) {\n      let message = {\n        message: messageContent,\n        username: username\n      };\n      dispatch(addMessage(message));\n    }\n\n    setMessageContent(\"\");\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    className: \"{}\",\n    name: \"msg_value\",\n    value: messageContent,\n    onChange: e => setMessageContent(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"{}\",\n    name: \"submit_button\",\n    onClick: catchSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }));\n};\n/*MessageBar.propTypes = {\n    catchSubmit: PropTypes.func.isRequired,\n};*/\n\n\nexport default MessageBar;","map":{"version":3,"sources":["/Users/loryleticee/Sites/react/src/components/MessageBar.js"],"names":["React","useState","useDispatch","useSelector","addMessage","MessageBar","messageContent","setMessageContent","username","state","dispatch","catchSubmit","e","preventDefault","message","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC,C,CACA;;AACA,SAAQC,UAAR,QAAyB,YAAzB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA,oBACuBJ,QAAQ,CAAC,EAAD,CAD/B;AAAA;AAAA,QACdK,cADc;AAAA,QACEC,iBADF;;AAGrB,QAAMC,QAAQ,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACD,QAAhB,CAA5B;AACA,QAAME,QAAQ,GAAGR,WAAW,EAA5B;;AAEA,QAAMS,WAAW,GAAIC,CAAD,IAAO;AACvBA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAIP,cAAJ,EAAoB;AAChB,UAAIQ,OAAO,GAAG;AACVA,QAAAA,OAAO,EAAOR,cADJ;AAEVE,QAAAA,QAAQ,EAAMA;AAFJ,OAAd;AAIDE,MAAAA,QAAQ,CAACN,UAAU,CAACU,OAAD,CAAX,CAAR;AACF;;AAEDP,IAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACJ,GAZA;;AAaA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,IAAI,EAAU,MADlB;AAEI,IAAA,SAAS,EAAK,IAFlB;AAGI,IAAA,IAAI,EAAU,WAHlB;AAII,IAAA,KAAK,EAAUD,cAJnB;AAKI,IAAA,QAAQ,EAASM,CAAD,IAAOL,iBAAiB,CAAEK,CAAC,CAACG,MAAF,CAASC,KAAX,CAL5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAQI;AACI,IAAA,IAAI,EAAU,QADlB;AAEI,IAAA,SAAS,EAAK,IAFlB;AAGI,IAAA,IAAI,EAAU,eAHlB;AAII,IAAA,OAAO,EAAQL,WAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CADJ;AAiBH,CApCD;AAsCA;;;;;AAIA,eAAeN,UAAf","sourcesContent":["import React, {useState} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\n//import PropTypes from 'prop-types';\nimport {addMessage} from '../actions';\n\nconst MessageBar = () => {\n    const [messageContent, setMessageContent] = useState('');\n\n    const username = useSelector(state => state.username);\n    const dispatch = useDispatch();\n\n    const catchSubmit = (e) => {\n        e.preventDefault();\n\n        if (messageContent) {\n            let message = {\n                message     : messageContent,\n                username    : username,\n            };\n           dispatch(addMessage(message))\n        }\n\n        setMessageContent(\"\");\n   };\n    return (\n        <div >\n            <input\n                type        = \"text\"\n                className   = \"{}\"\n                name        = \"msg_value\"\n                value       = {messageContent}\n                onChange    = { (e) => setMessageContent (e.target.value) }\n            />\n            <input\n                type        = \"submit\"\n                className   = \"{}\"\n                name        = \"submit_button\"\n                onClick     = {catchSubmit}\n            />\n        </div>\n    );\n};\n\n/*MessageBar.propTypes = {\n    catchSubmit: PropTypes.func.isRequired,\n};*/\n\nexport default MessageBar;"]},"metadata":{},"sourceType":"module"}