{"ast":null,"code":"import { ADD_MESSAGE, LOAD_MESSAGE_PENDING } from \"../actions\";\nimport { ws } from \"../services/websocket\";\nconst INIT_STATE = [{\n  message: '¬ Hello world',\n  username: '@ Toto',\n  sentAt: new Date()\n}];\nexport const messageList = (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case ADD_MESSAGE:\n      let newState = {\n        username: action.username,\n        message: action.message,\n        sentAt: action.sentAt\n      };\n      let serialize = JSON.parse(newState);\n      ws.send(serialize);\n      return [...state, newState];\n\n    case LOAD_MESSAGE_PENDING:\n      return state;\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/loryleticee/Sites/react/src/reducers/Chat.js"],"names":["ADD_MESSAGE","LOAD_MESSAGE_PENDING","ws","INIT_STATE","message","username","sentAt","Date","messageList","state","action","type","newState","serialize","JSON","parse","send"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,oBAArB,QAAgD,YAAhD;AACA,SAAQC,EAAR,QAAiB,uBAAjB;AACA,MAAMC,UAAU,GAAG,CACf;AACIC,EAAAA,OAAO,EAAG,eADd;AAEIC,EAAAA,QAAQ,EAAE,QAFd;AAGIC,EAAAA,MAAM,EAAI,IAAIC,IAAJ;AAHd,CADe,CAAnB;AAQA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGN,UAAT,EAAqBO,MAArB,KAAgC;AAEvD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKX,WAAL;AACI,UAAIY,QAAQ,GAAG;AACXP,QAAAA,QAAQ,EAAEK,MAAM,CAACL,QADN;AAEXD,QAAAA,OAAO,EAAGM,MAAM,CAACN,OAFN;AAGXE,QAAAA,MAAM,EAAII,MAAM,CAACJ;AAHN,OAAf;AAKA,UAAIO,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWH,QAAX,CAAhB;AACAV,MAAAA,EAAE,CAACc,IAAH,CAAQH,SAAR;AACA,aAAO,CAAC,GAAGJ,KAAJ,EAAUG,QAAV,CAAP;;AAEJ,SAAKX,oBAAL;AACI,aAAOQ,KAAP;;AACJ;AACI,aAAOA,KAAP;AAdR;AAgBH,CAlBM","sourcesContent":["import {ADD_MESSAGE, LOAD_MESSAGE_PENDING} from \"../actions\"\nimport {ws} from \"../services/websocket\";\nconst INIT_STATE = [\n    {\n        message : '¬ Hello world',\n        username: '@ Toto',\n        sentAt  : new Date()\n    }\n];\n\nexport const messageList = (state = INIT_STATE, action) => {\n\n    switch (action.type) {\n        case ADD_MESSAGE :\n            let newState = {\n                username: action.username,\n                message : action.message,\n                sentAt  : action.sentAt,\n            };\n            let serialize = JSON.parse(newState);\n            ws.send(serialize);\n            return [...state,newState ];\n\n        case LOAD_MESSAGE_PENDING :\n            return state;\n        default :\n            return state;\n    }\n};"]},"metadata":{},"sourceType":"module"}