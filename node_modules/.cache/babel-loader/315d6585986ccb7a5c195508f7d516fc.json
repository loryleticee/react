{"ast":null,"code":"import { useDispatch } from \"react-redux\";\nimport { ADD_MESSAGE, LOAD_MESSAGE_PENDING, LOAD_MESSAGE_ERROR, LOAD_MESSAGE_SUCCESS } from \"../actions\";\nimport axios from \"axios\";\nconst URL = \"https://my-json-server.typicode.com/tlenclos/formation-react-fake-server/messages\";\n\nconst INIT_STATE = () => {\n  const dispatch = useDispatch(); // return () => {\n  //   dispatch({type: LOAD_MESSAGE_PENDING});\n  //return async () => {\n\n  /*await*/\n\n  axios.get(URL).then(response => {\n    console.log(response);\n    dispatch({\n      type: LOAD_MESSAGE_SUCCESS,\n      messages: response\n    });\n  }).catch(err => dispatch({\n    type: LOAD_MESSAGE_ERROR,\n    error: err\n  })); //}\n  //}\n};\n\nexport const messageList = (state = INIT_STATE, action) => {\n  console.log(state);\n\n  switch (action.type) {\n    case ADD_MESSAGE:\n      let newState = {\n        username: action.username,\n        message: action.message,\n        sentAt: action.sentAt\n      };\n      return [...state, newState];\n\n    case LOAD_MESSAGE_ERROR:\n      return state;\n\n    case LOAD_MESSAGE_PENDING:\n      return state;\n\n    case LOAD_MESSAGE_SUCCESS:\n      return state;\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/loryleticee/Sites/react/src/reducers/Chat.js"],"names":["useDispatch","ADD_MESSAGE","LOAD_MESSAGE_PENDING","LOAD_MESSAGE_ERROR","LOAD_MESSAGE_SUCCESS","axios","URL","INIT_STATE","dispatch","get","then","response","console","log","type","messages","catch","err","error","messageList","state","action","newState","username","message","sentAt"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,aAA1B;AACA,SAAQC,WAAR,EAAqBC,oBAArB,EAA2CC,kBAA3C,EAA+DC,oBAA/D,QAA0F,YAA1F;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAG,GAAG,mFAAZ;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACrB,QAAMC,QAAQ,GAAGR,WAAW,EAA5B,CADqB,CAGtB;AACE;AAEG;;AACK;;AAAUK,EAAAA,KAAK,CAACI,GAAN,CAAUH,GAAV,EAAeI,IAAf,CACPC,QAAQ,IAAI;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAH,IAAAA,QAAQ,CAAC;AAACM,MAAAA,IAAI,EAAEV,oBAAP;AAA6BW,MAAAA,QAAQ,EAAEJ;AAAvC,KAAD,CAAR;AACH,GAJM,EAKTK,KALS,CAKHC,GAAG,IAAIT,QAAQ,CAAC;AAACM,IAAAA,IAAI,EAAEX,kBAAP;AAA2Be,IAAAA,KAAK,EAAED;AAAlC,GAAD,CALZ,EAPE,CAajB;AACJ;AACH,CAfD;;AAiBA,OAAO,MAAME,WAAW,GAAG,CAACC,KAAK,GAAGb,UAAT,EAAqBc,MAArB,KAAgC;AACvDT,EAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;;AACA,UAAQC,MAAM,CAACP,IAAf;AACI,SAAKb,WAAL;AACI,UAAIqB,QAAQ,GAAG;AACXC,QAAAA,QAAQ,EAAEF,MAAM,CAACE,QADN;AAEXC,QAAAA,OAAO,EAAGH,MAAM,CAACG,OAFN;AAGXC,QAAAA,MAAM,EAAIJ,MAAM,CAACI;AAHN,OAAf;AAMA,aAAO,CAAC,GAAGL,KAAJ,EAAWE,QAAX,CAAP;;AAEJ,SAAKnB,kBAAL;AACI,aAAOiB,KAAP;;AAEJ,SAAKlB,oBAAL;AACI,aAAOkB,KAAP;;AAEJ,SAAKhB,oBAAL;AACI,aAAOgB,KAAP;;AAEJ;AACI,aAAOA,KAAP;AApBR;AAsBH,CAxBM","sourcesContent":["import {useDispatch} from \"react-redux\";\nimport {ADD_MESSAGE, LOAD_MESSAGE_PENDING, LOAD_MESSAGE_ERROR, LOAD_MESSAGE_SUCCESS} from \"../actions\";\nimport axios from \"axios\";\n\nconst URL = \"https://my-json-server.typicode.com/tlenclos/formation-react-fake-server/messages\";\n\nconst INIT_STATE = () => {\n    const dispatch = useDispatch();\n\n   // return () => {\n     //   dispatch({type: LOAD_MESSAGE_PENDING});\n\n        //return async () => {\n             /*await*/ axios.get(URL).then(\n                response => {\n                    console.log(response);\n                    dispatch({type :LOAD_MESSAGE_SUCCESS, messages: response})\n                }\n            ).catch(err => dispatch({type :LOAD_MESSAGE_ERROR, error: err}))\n        //}\n    //}\n};\n\nexport const messageList = (state = INIT_STATE, action) => {\n    console.log(state);\n    switch (action.type) {\n        case ADD_MESSAGE :\n            let newState = {\n                username: action.username,\n                message : action.message,\n                sentAt  : action.sentAt,\n            };\n\n            return [...state, newState];\n\n        case LOAD_MESSAGE_ERROR :\n            return state;\n\n        case LOAD_MESSAGE_PENDING :\n            return state;\n\n        case LOAD_MESSAGE_SUCCESS :\n            return state;\n\n        default :\n            return state;\n    }\n};"]},"metadata":{},"sourceType":"module"}