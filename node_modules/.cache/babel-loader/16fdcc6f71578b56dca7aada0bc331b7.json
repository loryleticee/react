{"ast":null,"code":"import { useDispatch } from \"react-redux\";\nimport { ADD_MESSAGE, LOAD_MESSAGE_PENDING, LOAD_MESSAGE_ERROR, LOAD_MESSAGE_SUCCESS, pendingMessage, addMessage } from \"../actions\";\nimport axios from \"axios\";\nconst URL = \"https://my-json-server.typicode.com/tlenclos/formation-react-fake-server/messages\";\n\nconst INIT_STATE = () => {\n  const dispatch = useDispatch();\n  return axios.get(URL).then(response => {\n    dispatch(addMessage(response));\n  }).catch(error => {\n    dispatch(addMessage(error));\n  });\n};\n\nexport const messageList = (state = INIT_STATE(), action) => {\n  console.log(INIT_STATE());\n\n  switch (action.type) {\n    case ADD_MESSAGE:\n      let newState = {\n        username: action.username,\n        message: action.message,\n        sentAt: action.sentAt\n      };\n      return [...state, newState];\n\n    case LOAD_MESSAGE_ERROR:\n      return state;\n\n    case LOAD_MESSAGE_PENDING:\n      return state;\n\n    case LOAD_MESSAGE_SUCCESS:\n      return state;\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/loryleticee/Sites/react/src/reducers/Chat.js"],"names":["useDispatch","ADD_MESSAGE","LOAD_MESSAGE_PENDING","LOAD_MESSAGE_ERROR","LOAD_MESSAGE_SUCCESS","pendingMessage","addMessage","axios","URL","INIT_STATE","dispatch","get","then","response","catch","error","messageList","state","action","console","log","type","newState","username","message","sentAt"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,aAA1B;AACA,SACIC,WADJ,EAEIC,oBAFJ,EAGIC,kBAHJ,EAIIC,oBAJJ,EAKIC,cALJ,EAMIC,UANJ,QAOO,YAPP;AAQA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAG,GAAG,mFAAZ;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACrB,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,SAAOO,KAAK,CAACI,GAAN,CAAUH,GAAV,EACFI,IADE,CACGC,QAAQ,IAAI;AACdH,IAAAA,QAAQ,CAACJ,UAAU,CAACO,QAAD,CAAX,CAAR;AACH,GAHE,EAIFC,KAJE,CAIIC,KAAK,IAAI;AACZL,IAAAA,QAAQ,CAACJ,UAAU,CAACS,KAAD,CAAX,CAAR;AACH,GANE,CAAP;AAOH,CATD;;AAWA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGR,UAAU,EAAnB,EAAuBS,MAAvB,KAAkC;AACzDC,EAAAA,OAAO,CAACC,GAAR,CAAYX,UAAU,EAAtB;;AACA,UAAQS,MAAM,CAACG,IAAf;AACI,SAAKpB,WAAL;AACI,UAAIqB,QAAQ,GAAG;AACXC,QAAAA,QAAQ,EAAEL,MAAM,CAACK,QADN;AAEXC,QAAAA,OAAO,EAAGN,MAAM,CAACM,OAFN;AAGXC,QAAAA,MAAM,EAAIP,MAAM,CAACO;AAHN,OAAf;AAMA,aAAO,CAAC,GAAGR,KAAJ,EAAWK,QAAX,CAAP;;AAEJ,SAAKnB,kBAAL;AACI,aAAOc,KAAP;;AAEJ,SAAKf,oBAAL;AACI,aAAOe,KAAP;;AAEJ,SAAKb,oBAAL;AACI,aAAOa,KAAP;;AAEJ;AACI,aAAOA,KAAP;AApBR;AAsBH,CAxBM","sourcesContent":["import {useDispatch} from \"react-redux\";\nimport {\n    ADD_MESSAGE,\n    LOAD_MESSAGE_PENDING,\n    LOAD_MESSAGE_ERROR,\n    LOAD_MESSAGE_SUCCESS,\n    pendingMessage,\n    addMessage\n} from \"../actions\";\nimport axios from \"axios\";\n\nconst URL = \"https://my-json-server.typicode.com/tlenclos/formation-react-fake-server/messages\";\n\nconst INIT_STATE = () => {\n    const dispatch = useDispatch();\n    return axios.get(URL)\n        .then(response => {\n            dispatch(addMessage(response));\n        })\n        .catch(error => {\n            dispatch(addMessage(error));\n        })\n};\n\nexport const messageList = (state = INIT_STATE(), action) => {\n    console.log(INIT_STATE())\n    switch (action.type) {\n        case ADD_MESSAGE :\n            let newState = {\n                username: action.username,\n                message : action.message,\n                sentAt  : action.sentAt,\n            };\n\n            return [...state, newState];\n\n        case LOAD_MESSAGE_ERROR :\n            return state;\n\n        case LOAD_MESSAGE_PENDING :\n            return state;\n\n        case LOAD_MESSAGE_SUCCESS :\n            return state;\n\n        default :\n            return state;\n    }\n};"]},"metadata":{},"sourceType":"module"}